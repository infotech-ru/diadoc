<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Counteragent.proto

namespace Diadoc\Api\Proto;

use UnexpectedValueException;

/**
 * Protobuf type <code>Diadoc.Api.Proto.CounteragentStatus</code>
 */
class CounteragentStatus
{
    /**
     * Generated from protobuf enum <code>UnknownCounteragentStatus = 0;</code>
     */
    const UnknownCounteragentStatus = 0;
    /**
     * Generated from protobuf enum <code>IsMyCounteragent = 1;</code>
     */
    const IsMyCounteragent = 1;
    /**
     * Generated from protobuf enum <code>InvitesMe = 2;</code>
     */
    const InvitesMe = 2;
    /**
     * Generated from protobuf enum <code>IsInvitedByMe = 3;</code>
     */
    const IsInvitedByMe = 3;
    /**
     * Generated from protobuf enum <code>RejectsMe = 5;</code>
     */
    const RejectsMe = 5;
    /**
     * Generated from protobuf enum <code>IsRejectedByMe = 6;</code>
     */
    const IsRejectedByMe = 6;
    /**
     * Generated from protobuf enum <code>NotInCounteragentList = 7;</code>
     */
    const NotInCounteragentList = 7;

    private static $valueToName = [
        self::UnknownCounteragentStatus => 'UnknownCounteragentStatus',
        self::IsMyCounteragent => 'IsMyCounteragent',
        self::InvitesMe => 'InvitesMe',
        self::IsInvitedByMe => 'IsInvitedByMe',
        self::RejectsMe => 'RejectsMe',
        self::IsRejectedByMe => 'IsRejectedByMe',
        self::NotInCounteragentList => 'NotInCounteragentList',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

