<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Events/DiadocMessage-PostApi.proto

namespace Diadoc\Api\Proto\Events;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Events.SignedContent</code>
 */
class SignedContent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bytes Content = 1;</code>
     */
    protected $Content = null;
    /**
     * Generated from protobuf field <code>optional bytes Signature = 2;</code>
     */
    protected $Signature = null;
    /**
     * Generated from protobuf field <code>optional string NameOnShelf = 4;</code>
     */
    protected $NameOnShelf = null;
    /**
     * Generated from protobuf field <code>optional bool SignWithTestSignature = 5;</code>
     */
    protected $SignWithTestSignature = null;
    /**
     * Generated from protobuf field <code>optional string SignatureNameOnShelf = 6;</code>
     */
    protected $SignatureNameOnShelf = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Events.PowerOfAttorneyToPost PowerOfAttorney = 7;</code>
     */
    protected $PowerOfAttorney = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Content
     *     @type string $Signature
     *     @type string $NameOnShelf
     *     @type bool $SignWithTestSignature
     *     @type string $SignatureNameOnShelf
     *     @type \Diadoc\Api\Proto\Events\PowerOfAttorneyToPost $PowerOfAttorney
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Events\DiadocMessagePostApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bytes Content = 1;</code>
     * @return string
     */
    public function getContent()
    {
        return isset($this->Content) ? $this->Content : '';
    }

    public function hasContent()
    {
        return isset($this->Content);
    }

    public function clearContent()
    {
        unset($this->Content);
    }

    /**
     * Generated from protobuf field <code>optional bytes Content = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->Content = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes Signature = 2;</code>
     * @return string
     */
    public function getSignature()
    {
        return isset($this->Signature) ? $this->Signature : '';
    }

    public function hasSignature()
    {
        return isset($this->Signature);
    }

    public function clearSignature()
    {
        unset($this->Signature);
    }

    /**
     * Generated from protobuf field <code>optional bytes Signature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->Signature = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string NameOnShelf = 4;</code>
     * @return string
     */
    public function getNameOnShelf()
    {
        return isset($this->NameOnShelf) ? $this->NameOnShelf : '';
    }

    public function hasNameOnShelf()
    {
        return isset($this->NameOnShelf);
    }

    public function clearNameOnShelf()
    {
        unset($this->NameOnShelf);
    }

    /**
     * Generated from protobuf field <code>optional string NameOnShelf = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setNameOnShelf($var)
    {
        GPBUtil::checkString($var, True);
        $this->NameOnShelf = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool SignWithTestSignature = 5;</code>
     * @return bool
     */
    public function getSignWithTestSignature()
    {
        return isset($this->SignWithTestSignature) ? $this->SignWithTestSignature : false;
    }

    public function hasSignWithTestSignature()
    {
        return isset($this->SignWithTestSignature);
    }

    public function clearSignWithTestSignature()
    {
        unset($this->SignWithTestSignature);
    }

    /**
     * Generated from protobuf field <code>optional bool SignWithTestSignature = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setSignWithTestSignature($var)
    {
        GPBUtil::checkBool($var);
        $this->SignWithTestSignature = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string SignatureNameOnShelf = 6;</code>
     * @return string
     */
    public function getSignatureNameOnShelf()
    {
        return isset($this->SignatureNameOnShelf) ? $this->SignatureNameOnShelf : '';
    }

    public function hasSignatureNameOnShelf()
    {
        return isset($this->SignatureNameOnShelf);
    }

    public function clearSignatureNameOnShelf()
    {
        unset($this->SignatureNameOnShelf);
    }

    /**
     * Generated from protobuf field <code>optional string SignatureNameOnShelf = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSignatureNameOnShelf($var)
    {
        GPBUtil::checkString($var, True);
        $this->SignatureNameOnShelf = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Events.PowerOfAttorneyToPost PowerOfAttorney = 7;</code>
     * @return \Diadoc\Api\Proto\Events\PowerOfAttorneyToPost|null
     */
    public function getPowerOfAttorney()
    {
        return $this->PowerOfAttorney;
    }

    public function hasPowerOfAttorney()
    {
        return isset($this->PowerOfAttorney);
    }

    public function clearPowerOfAttorney()
    {
        unset($this->PowerOfAttorney);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Events.PowerOfAttorneyToPost PowerOfAttorney = 7;</code>
     * @param \Diadoc\Api\Proto\Events\PowerOfAttorneyToPost $var
     * @return $this
     */
    public function setPowerOfAttorney($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Events\PowerOfAttorneyToPost::class);
        $this->PowerOfAttorney = $var;

        return $this;
    }

}

