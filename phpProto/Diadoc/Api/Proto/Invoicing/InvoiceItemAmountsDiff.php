<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/InvoiceInfo.proto

namespace Diadoc\Api\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Invoicing.InvoiceItemAmountsDiff</code>
 */
class InvoiceItemAmountsDiff extends \Google\Protobuf\Internal\Message
{
    /**
     * Акциз
     *
     * Generated from protobuf field <code>optional string Excise = 1;</code>
     */
    protected $Excise = null;
    /**
     * Сумма без учета налога
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 2;</code>
     */
    protected $SubtotalWithVatExcluded = null;
    /**
     * Сумма налога
     *
     * Generated from protobuf field <code>optional string Vat = 3;</code>
     */
    protected $Vat = null;
    /**
     * Сумма с учетом налога
     *
     * Generated from protobuf field <code>optional string Subtotal = 4;</code>
     */
    protected $Subtotal = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Excise
     *           Акциз
     *     @type string $SubtotalWithVatExcluded
     *           Сумма без учета налога
     *     @type string $Vat
     *           Сумма налога
     *     @type string $Subtotal
     *           Сумма с учетом налога
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\InvoiceInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * Акциз
     *
     * Generated from protobuf field <code>optional string Excise = 1;</code>
     * @return string
     */
    public function getExcise()
    {
        return isset($this->Excise) ? $this->Excise : '';
    }

    public function hasExcise()
    {
        return isset($this->Excise);
    }

    public function clearExcise()
    {
        unset($this->Excise);
    }

    /**
     * Акциз
     *
     * Generated from protobuf field <code>optional string Excise = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setExcise($var)
    {
        GPBUtil::checkString($var, True);
        $this->Excise = $var;

        return $this;
    }

    /**
     * Сумма без учета налога
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 2;</code>
     * @return string
     */
    public function getSubtotalWithVatExcluded()
    {
        return isset($this->SubtotalWithVatExcluded) ? $this->SubtotalWithVatExcluded : '';
    }

    public function hasSubtotalWithVatExcluded()
    {
        return isset($this->SubtotalWithVatExcluded);
    }

    public function clearSubtotalWithVatExcluded()
    {
        unset($this->SubtotalWithVatExcluded);
    }

    /**
     * Сумма без учета налога
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotalWithVatExcluded($var)
    {
        GPBUtil::checkString($var, True);
        $this->SubtotalWithVatExcluded = $var;

        return $this;
    }

    /**
     * Сумма налога
     *
     * Generated from protobuf field <code>optional string Vat = 3;</code>
     * @return string
     */
    public function getVat()
    {
        return isset($this->Vat) ? $this->Vat : '';
    }

    public function hasVat()
    {
        return isset($this->Vat);
    }

    public function clearVat()
    {
        unset($this->Vat);
    }

    /**
     * Сумма налога
     *
     * Generated from protobuf field <code>optional string Vat = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setVat($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vat = $var;

        return $this;
    }

    /**
     * Сумма с учетом налога
     *
     * Generated from protobuf field <code>optional string Subtotal = 4;</code>
     * @return string
     */
    public function getSubtotal()
    {
        return isset($this->Subtotal) ? $this->Subtotal : '';
    }

    public function hasSubtotal()
    {
        return isset($this->Subtotal);
    }

    public function clearSubtotal()
    {
        unset($this->Subtotal);
    }

    /**
     * Сумма с учетом налога
     *
     * Generated from protobuf field <code>optional string Subtotal = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotal($var)
    {
        GPBUtil::checkString($var, True);
        $this->Subtotal = $var;

        return $this;
    }

}

