<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/UniversalTransferDocumentInfo.proto

namespace Diadoc\Api\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Invoicing.UniversalCorrectionDocumentSellerTitleInfo</code>
 */
class UniversalCorrectionDocumentSellerTitleInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Функция документа // Функция
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;</code>
     */
    protected $Function = 0;
    /**
     * Наименование первичного документа, определенное организацией // НаимДокОпр
     *
     * Generated from protobuf field <code>optional string DocumentName = 2;</code>
     */
    protected $DocumentName = null;
    /**
     * Дата УКД // ДатаКСчФ
     *
     * Generated from protobuf field <code>string DocumentDate = 3;</code>
     */
    protected $DocumentDate = '';
    /**
     * Номер УКД // НомерКСчФ
     *
     * Generated from protobuf field <code>string DocumentNumber = 4;</code>
     */
    protected $DocumentNumber = '';
    /**
     * Счет-фактура (первичный документ), к которому составлен корректировочный счет-фактура // СчФ
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.InvoiceForCorrectionInfo Invoices = 5;</code>
     */
    private $Invoices;
    /**
     * Продавец // СвПрод
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 6;</code>
     */
    protected $Seller = null;
    /**
     * Покупатель // СвПокуп
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 7;</code>
     */
    protected $Buyer = null;
    /**
     * Подписант // Подписант
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 8;</code>
     */
    private $Signers;
    /**
     * Содержание события // СодФХЖ3
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.EventContent EventContent = 9;</code>
     */
    protected $EventContent = null;
    /**
     * Сведения таблицы корректировочного счета-фактуры // ТаблКСчФ
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.InvoiceCorrectionTable InvoiceCorrectionTable = 10;</code>
     */
    protected $InvoiceCorrectionTable = null;
    /**
     * Валюта (код) // КодОКВ
     *
     * Generated from protobuf field <code>string Currency = 11;</code>
     */
    protected $Currency = '';
    /**
     * Курс валюты // КурсВал
     *
     * Generated from protobuf field <code>optional string CurrencyRate = 12;</code>
     */
    protected $CurrencyRate = null;
    /**
     * ДатаИспрКСчФ, обязателен, если формируется исправление // ДатаИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionDate = 13;</code>
     */
    protected $CorrectionRevisionDate = null;
    /**
     * НомИспрКСчФ, обязателен, если формируется исправление // НомИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionNumber = 14;</code>
     */
    protected $CorrectionRevisionNumber = null;
    /**
     * Информационное поле документа // ИнфПолФХЖ1
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 15;</code>
     */
    protected $AdditionalInfoId = null;
    /**
     * Наименование экономического субъекта-составителя файла обмена счета-фактуры (информации продавца) // НаимЭконСубСост
     *
     * Generated from protobuf field <code>string DocumentCreator = 16;</code>
     */
    protected $DocumentCreator = '';
    /**
     * Основание, по которому экономический субъект является составителем файла обмена счета-фактуры //ОснДоверОргСост
     *
     * Generated from protobuf field <code>optional string DocumentCreatorBase = 17;</code>
     */
    protected $DocumentCreatorBase = null;
    /**
     * Идентификатор государственного контракта // ИдГосКон
     *
     * Generated from protobuf field <code>optional string GovernmentContractInfo = 18;</code>
     */
    protected $GovernmentContractInfo = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $Function
     *           Функция документа // Функция
     *     @type string $DocumentName
     *           Наименование первичного документа, определенное организацией // НаимДокОпр
     *     @type string $DocumentDate
     *           Дата УКД // ДатаКСчФ
     *     @type string $DocumentNumber
     *           Номер УКД // НомерКСчФ
     *     @type array<\Diadoc\Api\Proto\Invoicing\InvoiceForCorrectionInfo>|\Google\Protobuf\Internal\RepeatedField $Invoices
     *           Счет-фактура (первичный документ), к которому составлен корректировочный счет-фактура // СчФ
     *     @type \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo $Seller
     *           Продавец // СвПрод
     *     @type \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo $Buyer
     *           Покупатель // СвПокуп
     *     @type array<\Diadoc\Api\Proto\Invoicing\Signers\ExtendedSigner>|\Google\Protobuf\Internal\RepeatedField $Signers
     *           Подписант // Подписант
     *     @type \Diadoc\Api\Proto\Invoicing\EventContent $EventContent
     *           Содержание события // СодФХЖ3
     *     @type \Diadoc\Api\Proto\Invoicing\InvoiceCorrectionTable $InvoiceCorrectionTable
     *           Сведения таблицы корректировочного счета-фактуры // ТаблКСчФ
     *     @type string $Currency
     *           Валюта (код) // КодОКВ
     *     @type string $CurrencyRate
     *           Курс валюты // КурсВал
     *     @type string $CorrectionRevisionDate
     *           ДатаИспрКСчФ, обязателен, если формируется исправление // ДатаИспрКСчФ
     *     @type string $CorrectionRevisionNumber
     *           НомИспрКСчФ, обязателен, если формируется исправление // НомИспрКСчФ
     *     @type \Diadoc\Api\Proto\Invoicing\AdditionalInfoId $AdditionalInfoId
     *           Информационное поле документа // ИнфПолФХЖ1
     *     @type string $DocumentCreator
     *           Наименование экономического субъекта-составителя файла обмена счета-фактуры (информации продавца) // НаимЭконСубСост
     *     @type string $DocumentCreatorBase
     *           Основание, по которому экономический субъект является составителем файла обмена счета-фактуры //ОснДоверОргСост
     *     @type string $GovernmentContractInfo
     *           Идентификатор государственного контракта // ИдГосКон
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\UniversalTransferDocumentInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * Функция документа // Функция
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;</code>
     * @return int
     */
    public function getFunction()
    {
        return $this->Function;
    }

    /**
     * Функция документа // Функция
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setFunction($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\Invoicing\FunctionType::class);
        $this->Function = $var;

        return $this;
    }

    /**
     * Наименование первичного документа, определенное организацией // НаимДокОпр
     *
     * Generated from protobuf field <code>optional string DocumentName = 2;</code>
     * @return string
     */
    public function getDocumentName()
    {
        return isset($this->DocumentName) ? $this->DocumentName : '';
    }

    public function hasDocumentName()
    {
        return isset($this->DocumentName);
    }

    public function clearDocumentName()
    {
        unset($this->DocumentName);
    }

    /**
     * Наименование первичного документа, определенное организацией // НаимДокОпр
     *
     * Generated from protobuf field <code>optional string DocumentName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDocumentName($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocumentName = $var;

        return $this;
    }

    /**
     * Дата УКД // ДатаКСчФ
     *
     * Generated from protobuf field <code>string DocumentDate = 3;</code>
     * @return string
     */
    public function getDocumentDate()
    {
        return $this->DocumentDate;
    }

    /**
     * Дата УКД // ДатаКСчФ
     *
     * Generated from protobuf field <code>string DocumentDate = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDocumentDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocumentDate = $var;

        return $this;
    }

    /**
     * Номер УКД // НомерКСчФ
     *
     * Generated from protobuf field <code>string DocumentNumber = 4;</code>
     * @return string
     */
    public function getDocumentNumber()
    {
        return $this->DocumentNumber;
    }

    /**
     * Номер УКД // НомерКСчФ
     *
     * Generated from protobuf field <code>string DocumentNumber = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDocumentNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocumentNumber = $var;

        return $this;
    }

    /**
     * Счет-фактура (первичный документ), к которому составлен корректировочный счет-фактура // СчФ
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.InvoiceForCorrectionInfo Invoices = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInvoices()
    {
        return $this->Invoices;
    }

    /**
     * Счет-фактура (первичный документ), к которому составлен корректировочный счет-фактура // СчФ
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.InvoiceForCorrectionInfo Invoices = 5;</code>
     * @param array<\Diadoc\Api\Proto\Invoicing\InvoiceForCorrectionInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInvoices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Diadoc\Api\Proto\Invoicing\InvoiceForCorrectionInfo::class);
        $this->Invoices = $arr;

        return $this;
    }

    /**
     * Продавец // СвПрод
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 6;</code>
     * @return \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo|null
     */
    public function getSeller()
    {
        return $this->Seller;
    }

    public function hasSeller()
    {
        return isset($this->Seller);
    }

    public function clearSeller()
    {
        unset($this->Seller);
    }

    /**
     * Продавец // СвПрод
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 6;</code>
     * @param \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo $var
     * @return $this
     */
    public function setSeller($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo::class);
        $this->Seller = $var;

        return $this;
    }

    /**
     * Покупатель // СвПокуп
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 7;</code>
     * @return \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo|null
     */
    public function getBuyer()
    {
        return $this->Buyer;
    }

    public function hasBuyer()
    {
        return isset($this->Buyer);
    }

    public function clearBuyer()
    {
        unset($this->Buyer);
    }

    /**
     * Покупатель // СвПокуп
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 7;</code>
     * @param \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo $var
     * @return $this
     */
    public function setBuyer($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Invoicing\Organizations\ExtendedOrganizationInfo::class);
        $this->Buyer = $var;

        return $this;
    }

    /**
     * Подписант // Подписант
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSigners()
    {
        return $this->Signers;
    }

    /**
     * Подписант // Подписант
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 8;</code>
     * @param array<\Diadoc\Api\Proto\Invoicing\Signers\ExtendedSigner>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSigners($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Diadoc\Api\Proto\Invoicing\Signers\ExtendedSigner::class);
        $this->Signers = $arr;

        return $this;
    }

    /**
     * Содержание события // СодФХЖ3
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.EventContent EventContent = 9;</code>
     * @return \Diadoc\Api\Proto\Invoicing\EventContent|null
     */
    public function getEventContent()
    {
        return $this->EventContent;
    }

    public function hasEventContent()
    {
        return isset($this->EventContent);
    }

    public function clearEventContent()
    {
        unset($this->EventContent);
    }

    /**
     * Содержание события // СодФХЖ3
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.EventContent EventContent = 9;</code>
     * @param \Diadoc\Api\Proto\Invoicing\EventContent $var
     * @return $this
     */
    public function setEventContent($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Invoicing\EventContent::class);
        $this->EventContent = $var;

        return $this;
    }

    /**
     * Сведения таблицы корректировочного счета-фактуры // ТаблКСчФ
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.InvoiceCorrectionTable InvoiceCorrectionTable = 10;</code>
     * @return \Diadoc\Api\Proto\Invoicing\InvoiceCorrectionTable|null
     */
    public function getInvoiceCorrectionTable()
    {
        return $this->InvoiceCorrectionTable;
    }

    public function hasInvoiceCorrectionTable()
    {
        return isset($this->InvoiceCorrectionTable);
    }

    public function clearInvoiceCorrectionTable()
    {
        unset($this->InvoiceCorrectionTable);
    }

    /**
     * Сведения таблицы корректировочного счета-фактуры // ТаблКСчФ
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.InvoiceCorrectionTable InvoiceCorrectionTable = 10;</code>
     * @param \Diadoc\Api\Proto\Invoicing\InvoiceCorrectionTable $var
     * @return $this
     */
    public function setInvoiceCorrectionTable($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Invoicing\InvoiceCorrectionTable::class);
        $this->InvoiceCorrectionTable = $var;

        return $this;
    }

    /**
     * Валюта (код) // КодОКВ
     *
     * Generated from protobuf field <code>string Currency = 11;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->Currency;
    }

    /**
     * Валюта (код) // КодОКВ
     *
     * Generated from protobuf field <code>string Currency = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->Currency = $var;

        return $this;
    }

    /**
     * Курс валюты // КурсВал
     *
     * Generated from protobuf field <code>optional string CurrencyRate = 12;</code>
     * @return string
     */
    public function getCurrencyRate()
    {
        return isset($this->CurrencyRate) ? $this->CurrencyRate : '';
    }

    public function hasCurrencyRate()
    {
        return isset($this->CurrencyRate);
    }

    public function clearCurrencyRate()
    {
        unset($this->CurrencyRate);
    }

    /**
     * Курс валюты // КурсВал
     *
     * Generated from protobuf field <code>optional string CurrencyRate = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrencyRate($var)
    {
        GPBUtil::checkString($var, True);
        $this->CurrencyRate = $var;

        return $this;
    }

    /**
     * ДатаИспрКСчФ, обязателен, если формируется исправление // ДатаИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionDate = 13;</code>
     * @return string
     */
    public function getCorrectionRevisionDate()
    {
        return isset($this->CorrectionRevisionDate) ? $this->CorrectionRevisionDate : '';
    }

    public function hasCorrectionRevisionDate()
    {
        return isset($this->CorrectionRevisionDate);
    }

    public function clearCorrectionRevisionDate()
    {
        unset($this->CorrectionRevisionDate);
    }

    /**
     * ДатаИспрКСчФ, обязателен, если формируется исправление // ДатаИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionDate = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setCorrectionRevisionDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->CorrectionRevisionDate = $var;

        return $this;
    }

    /**
     * НомИспрКСчФ, обязателен, если формируется исправление // НомИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionNumber = 14;</code>
     * @return string
     */
    public function getCorrectionRevisionNumber()
    {
        return isset($this->CorrectionRevisionNumber) ? $this->CorrectionRevisionNumber : '';
    }

    public function hasCorrectionRevisionNumber()
    {
        return isset($this->CorrectionRevisionNumber);
    }

    public function clearCorrectionRevisionNumber()
    {
        unset($this->CorrectionRevisionNumber);
    }

    /**
     * НомИспрКСчФ, обязателен, если формируется исправление // НомИспрКСчФ
     *
     * Generated from protobuf field <code>optional string CorrectionRevisionNumber = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setCorrectionRevisionNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->CorrectionRevisionNumber = $var;

        return $this;
    }

    /**
     * Информационное поле документа // ИнфПолФХЖ1
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 15;</code>
     * @return \Diadoc\Api\Proto\Invoicing\AdditionalInfoId|null
     */
    public function getAdditionalInfoId()
    {
        return $this->AdditionalInfoId;
    }

    public function hasAdditionalInfoId()
    {
        return isset($this->AdditionalInfoId);
    }

    public function clearAdditionalInfoId()
    {
        unset($this->AdditionalInfoId);
    }

    /**
     * Информационное поле документа // ИнфПолФХЖ1
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 15;</code>
     * @param \Diadoc\Api\Proto\Invoicing\AdditionalInfoId $var
     * @return $this
     */
    public function setAdditionalInfoId($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Invoicing\AdditionalInfoId::class);
        $this->AdditionalInfoId = $var;

        return $this;
    }

    /**
     * Наименование экономического субъекта-составителя файла обмена счета-фактуры (информации продавца) // НаимЭконСубСост
     *
     * Generated from protobuf field <code>string DocumentCreator = 16;</code>
     * @return string
     */
    public function getDocumentCreator()
    {
        return $this->DocumentCreator;
    }

    /**
     * Наименование экономического субъекта-составителя файла обмена счета-фактуры (информации продавца) // НаимЭконСубСост
     *
     * Generated from protobuf field <code>string DocumentCreator = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setDocumentCreator($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocumentCreator = $var;

        return $this;
    }

    /**
     * Основание, по которому экономический субъект является составителем файла обмена счета-фактуры //ОснДоверОргСост
     *
     * Generated from protobuf field <code>optional string DocumentCreatorBase = 17;</code>
     * @return string
     */
    public function getDocumentCreatorBase()
    {
        return isset($this->DocumentCreatorBase) ? $this->DocumentCreatorBase : '';
    }

    public function hasDocumentCreatorBase()
    {
        return isset($this->DocumentCreatorBase);
    }

    public function clearDocumentCreatorBase()
    {
        unset($this->DocumentCreatorBase);
    }

    /**
     * Основание, по которому экономический субъект является составителем файла обмена счета-фактуры //ОснДоверОргСост
     *
     * Generated from protobuf field <code>optional string DocumentCreatorBase = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setDocumentCreatorBase($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocumentCreatorBase = $var;

        return $this;
    }

    /**
     * Идентификатор государственного контракта // ИдГосКон
     *
     * Generated from protobuf field <code>optional string GovernmentContractInfo = 18;</code>
     * @return string
     */
    public function getGovernmentContractInfo()
    {
        return isset($this->GovernmentContractInfo) ? $this->GovernmentContractInfo : '';
    }

    public function hasGovernmentContractInfo()
    {
        return isset($this->GovernmentContractInfo);
    }

    public function clearGovernmentContractInfo()
    {
        unset($this->GovernmentContractInfo);
    }

    /**
     * Идентификатор государственного контракта // ИдГосКон
     *
     * Generated from protobuf field <code>optional string GovernmentContractInfo = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setGovernmentContractInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->GovernmentContractInfo = $var;

        return $this;
    }

}

