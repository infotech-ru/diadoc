<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/ExtendedOrganizationInfo.proto

namespace Diadoc\Api\Proto\Invoicing\Organizations;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo</code>
 */
class ExtendedOrganizationInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>optional string BoxId = 1;</code>
     */
    protected $BoxId = null;
    /**
     * Название // НаимОрг
     *
     * Generated from protobuf field <code>optional string OrgName = 2;</code>
     */
    protected $OrgName = null;
    /**
     * ИНН // ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 3;</code>
     */
    protected $Inn = null;
    /**
     * КПП // КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 4;</code>
     */
    protected $Kpp = null;
    /**
     * Адрес // Адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 5;</code>
     */
    protected $Address = null;
    /**
     * Идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 6;</code>
     */
    protected $FnsParticipantId = null;
    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     */
    protected $OrgType = 0;
    /**
     * Код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 8;</code>
     */
    protected $Okopf = null;
    /**
     * Код ОКПО // ОКПО
     *
     * Generated from protobuf field <code>optional string Okpo = 9;</code>
     */
    protected $Okpo = null;
    /**
     * Код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 10;</code>
     */
    protected $Okdp = null;
    /**
     * Номер контактного телефона/факс // Тлф
     *
     * Generated from protobuf field <code>optional string Phone = 11;</code>
     */
    protected $Phone = null;
    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>optional string Email = 12;</code>
     */
    protected $Email = null;
    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>optional string CorrespondentAccount = 13;</code>
     */
    protected $CorrespondentAccount = null;
    /**
     * Номер банковского счета // НомерСчета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 14;</code>
     */
    protected $BankAccountNumber = null;
    /**
     * Название банка // НаимБанк
     *
     * Generated from protobuf field <code>optional string BankName = 15;</code>
     */
    protected $BankName = null;
    /**
     * БИК // БИК
     *
     * Generated from protobuf field <code>optional string BankId = 16;</code>
     */
    protected $BankId = null;
    /**
     * Структурное подразделение // СтруктПодр
     *
     * Generated from protobuf field <code>optional string Department = 17;</code>
     */
    protected $Department = null;
    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>optional string OrganizationAdditionalInfo = 18;</code>
     */
    protected $OrganizationAdditionalInfo = null;
    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ // ИныеСвед
     *
     * Generated from protobuf field <code>optional string OrganizationOrPersonInfo = 19;</code>
     */
    protected $OrganizationOrPersonInfo = null;
    /**
     * Реквизиты свидетельства о государственной регистрации ИП // СвГосРегИп
     *
     * Generated from protobuf field <code>optional string IndividualEntityRegistrationCertificate = 20;</code>
     */
    protected $IndividualEntityRegistrationCertificate = null;
    /**
     * Страна // Страна
     *
     * Generated from protobuf field <code>optional string Country = 21;</code>
     */
    protected $Country = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $BoxId
     *           Идентификатор ящика в Диадоке
     *     @type string $OrgName
     *           Название // НаимОрг
     *     @type string $Inn
     *           ИНН // ИНН ФЛ-ИНН
     *     @type string $Kpp
     *           КПП // КПП
     *     @type \Diadoc\Api\Proto\Address $Address
     *           Адрес // Адрес
     *     @type string $FnsParticipantId
     *           Идентификатор участника ЭДО
     *     @type int $OrgType
     *           СвИП - СвЮЛУч - СвИнНеУч
     *     @type string $Okopf
     *           Код организационно-правовой формы по ОКОПФ
     *     @type string $Okpo
     *           Код ОКПО // ОКПО
     *     @type string $Okdp
     *           Код основного вида деятельности по ОКДП
     *     @type string $Phone
     *           Номер контактного телефона/факс // Тлф
     *     @type string $Email
     *           Адрес электронной почты // ЭлПочта
     *     @type string $CorrespondentAccount
     *           Корреспондентский счёт // КорСчет
     *     @type string $BankAccountNumber
     *           Номер банковского счета // НомерСчета
     *     @type string $BankName
     *           Название банка // НаимБанк
     *     @type string $BankId
     *           БИК // БИК
     *     @type string $Department
     *           Структурное подразделение // СтруктПодр
     *     @type string $OrganizationAdditionalInfo
     *           Информация для участника // ИнфДляУчаст
     *     @type string $OrganizationOrPersonInfo
     *           Иные сведения, идентифицирующие ФЛ или ЮЛ // ИныеСвед
     *     @type string $IndividualEntityRegistrationCertificate
     *           Реквизиты свидетельства о государственной регистрации ИП // СвГосРегИп
     *     @type string $Country
     *           Страна // Страна
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\ExtendedOrganizationInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * Идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>optional string BoxId = 1;</code>
     * @return string
     */
    public function getBoxId()
    {
        return isset($this->BoxId) ? $this->BoxId : '';
    }

    public function hasBoxId()
    {
        return isset($this->BoxId);
    }

    public function clearBoxId()
    {
        unset($this->BoxId);
    }

    /**
     * Идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>optional string BoxId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setBoxId($var)
    {
        GPBUtil::checkString($var, True);
        $this->BoxId = $var;

        return $this;
    }

    /**
     * Название // НаимОрг
     *
     * Generated from protobuf field <code>optional string OrgName = 2;</code>
     * @return string
     */
    public function getOrgName()
    {
        return isset($this->OrgName) ? $this->OrgName : '';
    }

    public function hasOrgName()
    {
        return isset($this->OrgName);
    }

    public function clearOrgName()
    {
        unset($this->OrgName);
    }

    /**
     * Название // НаимОрг
     *
     * Generated from protobuf field <code>optional string OrgName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setOrgName($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrgName = $var;

        return $this;
    }

    /**
     * ИНН // ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 3;</code>
     * @return string
     */
    public function getInn()
    {
        return isset($this->Inn) ? $this->Inn : '';
    }

    public function hasInn()
    {
        return isset($this->Inn);
    }

    public function clearInn()
    {
        unset($this->Inn);
    }

    /**
     * ИНН // ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setInn($var)
    {
        GPBUtil::checkString($var, True);
        $this->Inn = $var;

        return $this;
    }

    /**
     * КПП // КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 4;</code>
     * @return string
     */
    public function getKpp()
    {
        return isset($this->Kpp) ? $this->Kpp : '';
    }

    public function hasKpp()
    {
        return isset($this->Kpp);
    }

    public function clearKpp()
    {
        unset($this->Kpp);
    }

    /**
     * КПП // КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setKpp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Kpp = $var;

        return $this;
    }

    /**
     * Адрес // Адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 5;</code>
     * @return \Diadoc\Api\Proto\Address|null
     */
    public function getAddress()
    {
        return $this->Address;
    }

    public function hasAddress()
    {
        return isset($this->Address);
    }

    public function clearAddress()
    {
        unset($this->Address);
    }

    /**
     * Адрес // Адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 5;</code>
     * @param \Diadoc\Api\Proto\Address $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Address::class);
        $this->Address = $var;

        return $this;
    }

    /**
     * Идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 6;</code>
     * @return string
     */
    public function getFnsParticipantId()
    {
        return isset($this->FnsParticipantId) ? $this->FnsParticipantId : '';
    }

    public function hasFnsParticipantId()
    {
        return isset($this->FnsParticipantId);
    }

    public function clearFnsParticipantId()
    {
        unset($this->FnsParticipantId);
    }

    /**
     * Идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setFnsParticipantId($var)
    {
        GPBUtil::checkString($var, True);
        $this->FnsParticipantId = $var;

        return $this;
    }

    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     * @return int
     */
    public function getOrgType()
    {
        return $this->OrgType;
    }

    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setOrgType($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\Invoicing\Organizations\OrgType::class);
        $this->OrgType = $var;

        return $this;
    }

    /**
     * Код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 8;</code>
     * @return string
     */
    public function getOkopf()
    {
        return isset($this->Okopf) ? $this->Okopf : '';
    }

    public function hasOkopf()
    {
        return isset($this->Okopf);
    }

    public function clearOkopf()
    {
        unset($this->Okopf);
    }

    /**
     * Код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setOkopf($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okopf = $var;

        return $this;
    }

    /**
     * Код ОКПО // ОКПО
     *
     * Generated from protobuf field <code>optional string Okpo = 9;</code>
     * @return string
     */
    public function getOkpo()
    {
        return isset($this->Okpo) ? $this->Okpo : '';
    }

    public function hasOkpo()
    {
        return isset($this->Okpo);
    }

    public function clearOkpo()
    {
        unset($this->Okpo);
    }

    /**
     * Код ОКПО // ОКПО
     *
     * Generated from protobuf field <code>optional string Okpo = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setOkpo($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okpo = $var;

        return $this;
    }

    /**
     * Код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 10;</code>
     * @return string
     */
    public function getOkdp()
    {
        return isset($this->Okdp) ? $this->Okdp : '';
    }

    public function hasOkdp()
    {
        return isset($this->Okdp);
    }

    public function clearOkdp()
    {
        unset($this->Okdp);
    }

    /**
     * Код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setOkdp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okdp = $var;

        return $this;
    }

    /**
     * Номер контактного телефона/факс // Тлф
     *
     * Generated from protobuf field <code>optional string Phone = 11;</code>
     * @return string
     */
    public function getPhone()
    {
        return isset($this->Phone) ? $this->Phone : '';
    }

    public function hasPhone()
    {
        return isset($this->Phone);
    }

    public function clearPhone()
    {
        unset($this->Phone);
    }

    /**
     * Номер контактного телефона/факс // Тлф
     *
     * Generated from protobuf field <code>optional string Phone = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setPhone($var)
    {
        GPBUtil::checkString($var, True);
        $this->Phone = $var;

        return $this;
    }

    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>optional string Email = 12;</code>
     * @return string
     */
    public function getEmail()
    {
        return isset($this->Email) ? $this->Email : '';
    }

    public function hasEmail()
    {
        return isset($this->Email);
    }

    public function clearEmail()
    {
        unset($this->Email);
    }

    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>optional string Email = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->Email = $var;

        return $this;
    }

    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>optional string CorrespondentAccount = 13;</code>
     * @return string
     */
    public function getCorrespondentAccount()
    {
        return isset($this->CorrespondentAccount) ? $this->CorrespondentAccount : '';
    }

    public function hasCorrespondentAccount()
    {
        return isset($this->CorrespondentAccount);
    }

    public function clearCorrespondentAccount()
    {
        unset($this->CorrespondentAccount);
    }

    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>optional string CorrespondentAccount = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setCorrespondentAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->CorrespondentAccount = $var;

        return $this;
    }

    /**
     * Номер банковского счета // НомерСчета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 14;</code>
     * @return string
     */
    public function getBankAccountNumber()
    {
        return isset($this->BankAccountNumber) ? $this->BankAccountNumber : '';
    }

    public function hasBankAccountNumber()
    {
        return isset($this->BankAccountNumber);
    }

    public function clearBankAccountNumber()
    {
        unset($this->BankAccountNumber);
    }

    /**
     * Номер банковского счета // НомерСчета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setBankAccountNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankAccountNumber = $var;

        return $this;
    }

    /**
     * Название банка // НаимБанк
     *
     * Generated from protobuf field <code>optional string BankName = 15;</code>
     * @return string
     */
    public function getBankName()
    {
        return isset($this->BankName) ? $this->BankName : '';
    }

    public function hasBankName()
    {
        return isset($this->BankName);
    }

    public function clearBankName()
    {
        unset($this->BankName);
    }

    /**
     * Название банка // НаимБанк
     *
     * Generated from protobuf field <code>optional string BankName = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setBankName($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankName = $var;

        return $this;
    }

    /**
     * БИК // БИК
     *
     * Generated from protobuf field <code>optional string BankId = 16;</code>
     * @return string
     */
    public function getBankId()
    {
        return isset($this->BankId) ? $this->BankId : '';
    }

    public function hasBankId()
    {
        return isset($this->BankId);
    }

    public function clearBankId()
    {
        unset($this->BankId);
    }

    /**
     * БИК // БИК
     *
     * Generated from protobuf field <code>optional string BankId = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setBankId($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankId = $var;

        return $this;
    }

    /**
     * Структурное подразделение // СтруктПодр
     *
     * Generated from protobuf field <code>optional string Department = 17;</code>
     * @return string
     */
    public function getDepartment()
    {
        return isset($this->Department) ? $this->Department : '';
    }

    public function hasDepartment()
    {
        return isset($this->Department);
    }

    public function clearDepartment()
    {
        unset($this->Department);
    }

    /**
     * Структурное подразделение // СтруктПодр
     *
     * Generated from protobuf field <code>optional string Department = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setDepartment($var)
    {
        GPBUtil::checkString($var, True);
        $this->Department = $var;

        return $this;
    }

    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>optional string OrganizationAdditionalInfo = 18;</code>
     * @return string
     */
    public function getOrganizationAdditionalInfo()
    {
        return isset($this->OrganizationAdditionalInfo) ? $this->OrganizationAdditionalInfo : '';
    }

    public function hasOrganizationAdditionalInfo()
    {
        return isset($this->OrganizationAdditionalInfo);
    }

    public function clearOrganizationAdditionalInfo()
    {
        unset($this->OrganizationAdditionalInfo);
    }

    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>optional string OrganizationAdditionalInfo = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setOrganizationAdditionalInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrganizationAdditionalInfo = $var;

        return $this;
    }

    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ // ИныеСвед
     *
     * Generated from protobuf field <code>optional string OrganizationOrPersonInfo = 19;</code>
     * @return string
     */
    public function getOrganizationOrPersonInfo()
    {
        return isset($this->OrganizationOrPersonInfo) ? $this->OrganizationOrPersonInfo : '';
    }

    public function hasOrganizationOrPersonInfo()
    {
        return isset($this->OrganizationOrPersonInfo);
    }

    public function clearOrganizationOrPersonInfo()
    {
        unset($this->OrganizationOrPersonInfo);
    }

    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ // ИныеСвед
     *
     * Generated from protobuf field <code>optional string OrganizationOrPersonInfo = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setOrganizationOrPersonInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrganizationOrPersonInfo = $var;

        return $this;
    }

    /**
     * Реквизиты свидетельства о государственной регистрации ИП // СвГосРегИп
     *
     * Generated from protobuf field <code>optional string IndividualEntityRegistrationCertificate = 20;</code>
     * @return string
     */
    public function getIndividualEntityRegistrationCertificate()
    {
        return isset($this->IndividualEntityRegistrationCertificate) ? $this->IndividualEntityRegistrationCertificate : '';
    }

    public function hasIndividualEntityRegistrationCertificate()
    {
        return isset($this->IndividualEntityRegistrationCertificate);
    }

    public function clearIndividualEntityRegistrationCertificate()
    {
        unset($this->IndividualEntityRegistrationCertificate);
    }

    /**
     * Реквизиты свидетельства о государственной регистрации ИП // СвГосРегИп
     *
     * Generated from protobuf field <code>optional string IndividualEntityRegistrationCertificate = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setIndividualEntityRegistrationCertificate($var)
    {
        GPBUtil::checkString($var, True);
        $this->IndividualEntityRegistrationCertificate = $var;

        return $this;
    }

    /**
     * Страна // Страна
     *
     * Generated from protobuf field <code>optional string Country = 21;</code>
     * @return string
     */
    public function getCountry()
    {
        return isset($this->Country) ? $this->Country : '';
    }

    public function hasCountry()
    {
        return isset($this->Country);
    }

    public function clearCountry()
    {
        unset($this->Country);
    }

    /**
     * Страна // Страна
     *
     * Generated from protobuf field <code>optional string Country = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->Country = $var;

        return $this;
    }

}

