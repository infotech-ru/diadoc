<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Documents/Document.proto

namespace Diadoc\Api\Proto\Documents;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Documents.ResolutionStatus</code>
 */
class ResolutionStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1;</code>
     */
    protected $Type = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     */
    protected $Target = null;
    /**
     * Generated from protobuf field <code>string AuthorUserId = 3;</code>
     */
    protected $AuthorUserId = '';
    /**
     * Generated from protobuf field <code>string AuthorFIO = 4;</code>
     */
    protected $AuthorFIO = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $Type
     *     @type \Diadoc\Api\Proto\ResolutionTarget $Target
     *     @type string $AuthorUserId
     *     @type string $AuthorFIO
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Documents\Document::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return isset($this->Type) ? $this->Type : 0;
    }

    public function hasType()
    {
        return isset($this->Type);
    }

    public function clearType()
    {
        unset($this->Type);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\Documents\ResolutionStatusType::class);
        $this->Type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     * @return \Diadoc\Api\Proto\ResolutionTarget|null
     */
    public function getTarget()
    {
        return $this->Target;
    }

    public function hasTarget()
    {
        return isset($this->Target);
    }

    public function clearTarget()
    {
        unset($this->Target);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     * @param \Diadoc\Api\Proto\ResolutionTarget $var
     * @return $this
     */
    public function setTarget($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\ResolutionTarget::class);
        $this->Target = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string AuthorUserId = 3;</code>
     * @return string
     */
    public function getAuthorUserId()
    {
        return $this->AuthorUserId;
    }

    /**
     * Generated from protobuf field <code>string AuthorUserId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAuthorUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->AuthorUserId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string AuthorFIO = 4;</code>
     * @return string
     */
    public function getAuthorFIO()
    {
        return $this->AuthorFIO;
    }

    /**
     * Generated from protobuf field <code>string AuthorFIO = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAuthorFIO($var)
    {
        GPBUtil::checkString($var, True);
        $this->AuthorFIO = $var;

        return $this;
    }

}

