<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Docflow/DocflowApi.proto

namespace Diadoc\Api\Proto\Docflow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Docflow.DocflowEvent</code>
 */
class DocflowEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string EventId = 1;</code>
     */
    protected $EventId = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Timestamp Timestamp = 2;</code>
     */
    protected $Timestamp = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.DocumentId DocumentId = 3;</code>
     */
    protected $DocumentId = null;
    /**
     * Generated from protobuf field <code>optional bytes IndexKey = 4;</code>
     */
    protected $IndexKey = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow Document = 5;</code>
     */
    protected $Document = null;
    /**
     * Generated from protobuf field <code>optional string PreviousEventId = 6;</code>
     */
    protected $PreviousEventId = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow PreviousDocumentState = 7;</code>
     */
    protected $PreviousDocumentState = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $EventId
     *     @type \Diadoc\Api\Proto\Timestamp $Timestamp
     *     @type \Diadoc\Api\Proto\DocumentId $DocumentId
     *     @type string $IndexKey
     *     @type \Diadoc\Api\Proto\Docflow\DocumentWithDocflow $Document
     *     @type string $PreviousEventId
     *     @type \Diadoc\Api\Proto\Docflow\DocumentWithDocflow $PreviousDocumentState
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Docflow\DocflowApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string EventId = 1;</code>
     * @return string
     */
    public function getEventId()
    {
        return isset($this->EventId) ? $this->EventId : '';
    }

    public function hasEventId()
    {
        return isset($this->EventId);
    }

    public function clearEventId()
    {
        unset($this->EventId);
    }

    /**
     * Generated from protobuf field <code>optional string EventId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEventId($var)
    {
        GPBUtil::checkString($var, True);
        $this->EventId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Timestamp Timestamp = 2;</code>
     * @return \Diadoc\Api\Proto\Timestamp|null
     */
    public function getTimestamp()
    {
        return $this->Timestamp;
    }

    public function hasTimestamp()
    {
        return isset($this->Timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->Timestamp);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Timestamp Timestamp = 2;</code>
     * @param \Diadoc\Api\Proto\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Timestamp::class);
        $this->Timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.DocumentId DocumentId = 3;</code>
     * @return \Diadoc\Api\Proto\DocumentId|null
     */
    public function getDocumentId()
    {
        return $this->DocumentId;
    }

    public function hasDocumentId()
    {
        return isset($this->DocumentId);
    }

    public function clearDocumentId()
    {
        unset($this->DocumentId);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.DocumentId DocumentId = 3;</code>
     * @param \Diadoc\Api\Proto\DocumentId $var
     * @return $this
     */
    public function setDocumentId($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\DocumentId::class);
        $this->DocumentId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes IndexKey = 4;</code>
     * @return string
     */
    public function getIndexKey()
    {
        return isset($this->IndexKey) ? $this->IndexKey : '';
    }

    public function hasIndexKey()
    {
        return isset($this->IndexKey);
    }

    public function clearIndexKey()
    {
        unset($this->IndexKey);
    }

    /**
     * Generated from protobuf field <code>optional bytes IndexKey = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setIndexKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->IndexKey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow Document = 5;</code>
     * @return \Diadoc\Api\Proto\Docflow\DocumentWithDocflow|null
     */
    public function getDocument()
    {
        return $this->Document;
    }

    public function hasDocument()
    {
        return isset($this->Document);
    }

    public function clearDocument()
    {
        unset($this->Document);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow Document = 5;</code>
     * @param \Diadoc\Api\Proto\Docflow\DocumentWithDocflow $var
     * @return $this
     */
    public function setDocument($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Docflow\DocumentWithDocflow::class);
        $this->Document = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string PreviousEventId = 6;</code>
     * @return string
     */
    public function getPreviousEventId()
    {
        return isset($this->PreviousEventId) ? $this->PreviousEventId : '';
    }

    public function hasPreviousEventId()
    {
        return isset($this->PreviousEventId);
    }

    public function clearPreviousEventId()
    {
        unset($this->PreviousEventId);
    }

    /**
     * Generated from protobuf field <code>optional string PreviousEventId = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setPreviousEventId($var)
    {
        GPBUtil::checkString($var, True);
        $this->PreviousEventId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow PreviousDocumentState = 7;</code>
     * @return \Diadoc\Api\Proto\Docflow\DocumentWithDocflow|null
     */
    public function getPreviousDocumentState()
    {
        return $this->PreviousDocumentState;
    }

    public function hasPreviousDocumentState()
    {
        return isset($this->PreviousDocumentState);
    }

    public function clearPreviousDocumentState()
    {
        unset($this->PreviousDocumentState);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.DocumentWithDocflow PreviousDocumentState = 7;</code>
     * @param \Diadoc\Api\Proto\Docflow\DocumentWithDocflow $var
     * @return $this
     */
    public function setPreviousDocumentState($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Docflow\DocumentWithDocflow::class);
        $this->PreviousDocumentState = $var;

        return $this;
    }

}

