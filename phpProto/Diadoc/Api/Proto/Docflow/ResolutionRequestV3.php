<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Docflow/ResolutionDocflowV3.proto

namespace Diadoc\Api\Proto\Docflow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Docflow.ResolutionRequestV3</code>
 */
class ResolutionRequestV3 extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.Entity Entity = 1;</code>
     */
    protected $Entity = null;
    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     */
    protected $Target = null;
    /**
     * Generated from protobuf field <code>optional string AuthorUserId = 3;</code>
     */
    protected $AuthorUserId = null;
    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionRequestType RequestType = 4;</code>
     */
    protected $RequestType = 0;
    /**
     * Generated from protobuf field <code>optional string ResolvedWith = 5;</code>
     */
    protected $ResolvedWith = null;
    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.ResolutionAction Actions = 6;</code>
     */
    private $Actions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Diadoc\Api\Proto\Docflow\Entity $Entity
     *     @type \Diadoc\Api\Proto\ResolutionTarget $Target
     *     @type string $AuthorUserId
     *     @type int $RequestType
     *     @type string $ResolvedWith
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $Actions
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Docflow\ResolutionDocflowV3::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.Entity Entity = 1;</code>
     * @return \Diadoc\Api\Proto\Docflow\Entity|null
     */
    public function getEntity()
    {
        return $this->Entity;
    }

    public function hasEntity()
    {
        return isset($this->Entity);
    }

    public function clearEntity()
    {
        unset($this->Entity);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.Entity Entity = 1;</code>
     * @param \Diadoc\Api\Proto\Docflow\Entity $var
     * @return $this
     */
    public function setEntity($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Docflow\Entity::class);
        $this->Entity = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     * @return \Diadoc\Api\Proto\ResolutionTarget|null
     */
    public function getTarget()
    {
        return $this->Target;
    }

    public function hasTarget()
    {
        return isset($this->Target);
    }

    public function clearTarget()
    {
        unset($this->Target);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionTarget Target = 2;</code>
     * @param \Diadoc\Api\Proto\ResolutionTarget $var
     * @return $this
     */
    public function setTarget($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\ResolutionTarget::class);
        $this->Target = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string AuthorUserId = 3;</code>
     * @return string
     */
    public function getAuthorUserId()
    {
        return isset($this->AuthorUserId) ? $this->AuthorUserId : '';
    }

    public function hasAuthorUserId()
    {
        return isset($this->AuthorUserId);
    }

    public function clearAuthorUserId()
    {
        unset($this->AuthorUserId);
    }

    /**
     * Generated from protobuf field <code>optional string AuthorUserId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAuthorUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->AuthorUserId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionRequestType RequestType = 4;</code>
     * @return int
     */
    public function getRequestType()
    {
        return $this->RequestType;
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.ResolutionRequestType RequestType = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setRequestType($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\ResolutionRequestType::class);
        $this->RequestType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string ResolvedWith = 5;</code>
     * @return string
     */
    public function getResolvedWith()
    {
        return isset($this->ResolvedWith) ? $this->ResolvedWith : '';
    }

    public function hasResolvedWith()
    {
        return isset($this->ResolvedWith);
    }

    public function clearResolvedWith()
    {
        unset($this->ResolvedWith);
    }

    /**
     * Generated from protobuf field <code>optional string ResolvedWith = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setResolvedWith($var)
    {
        GPBUtil::checkString($var, True);
        $this->ResolvedWith = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.ResolutionAction Actions = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getActions()
    {
        return $this->Actions;
    }

    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.ResolutionAction Actions = 6;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setActions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Diadoc\Api\Proto\ResolutionAction::class);
        $this->Actions = $arr;

        return $this;
    }

}

