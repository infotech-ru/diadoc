<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Docflow/DocumentInfoV3.proto

namespace Diadoc\Api\Proto\Docflow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Docflow.DocumentTemplateInfo</code>
 */
class DocumentTemplateInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.DocumentParticipants LetterParticipants = 1;</code>
     */
    protected $LetterParticipants = null;
    /**
     * Generated from protobuf field <code>repeated string TransformedToLetterIds = 2;</code>
     */
    private $TransformedToLetterIds;
    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Docflow.TemplateTransformationInfo TemplateTransformationInfos = 3;</code>
     */
    private $TemplateTransformationInfos;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.TemplateRefusalInfo TemplateRefusalInfo = 4;</code>
     */
    protected $TemplateRefusalInfo = null;
    /**
     * Generated from protobuf field <code>optional bool IsReusable = 5;</code>
     */
    protected $IsReusable = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Diadoc\Api\Proto\Docflow\DocumentParticipants $LetterParticipants
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $TransformedToLetterIds
     *     @type array<\Diadoc\Api\Proto\Docflow\TemplateTransformationInfo>|\Google\Protobuf\Internal\RepeatedField $TemplateTransformationInfos
     *     @type \Diadoc\Api\Proto\Docflow\TemplateRefusalInfo $TemplateRefusalInfo
     *     @type bool $IsReusable
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Docflow\DocumentInfoV3::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.DocumentParticipants LetterParticipants = 1;</code>
     * @return \Diadoc\Api\Proto\Docflow\DocumentParticipants|null
     */
    public function getLetterParticipants()
    {
        return $this->LetterParticipants;
    }

    public function hasLetterParticipants()
    {
        return isset($this->LetterParticipants);
    }

    public function clearLetterParticipants()
    {
        unset($this->LetterParticipants);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Api.Proto.Docflow.DocumentParticipants LetterParticipants = 1;</code>
     * @param \Diadoc\Api\Proto\Docflow\DocumentParticipants $var
     * @return $this
     */
    public function setLetterParticipants($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Docflow\DocumentParticipants::class);
        $this->LetterParticipants = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string TransformedToLetterIds = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTransformedToLetterIds()
    {
        return $this->TransformedToLetterIds;
    }

    /**
     * Generated from protobuf field <code>repeated string TransformedToLetterIds = 2;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTransformedToLetterIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->TransformedToLetterIds = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Docflow.TemplateTransformationInfo TemplateTransformationInfos = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTemplateTransformationInfos()
    {
        return $this->TemplateTransformationInfos;
    }

    /**
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Docflow.TemplateTransformationInfo TemplateTransformationInfos = 3;</code>
     * @param array<\Diadoc\Api\Proto\Docflow\TemplateTransformationInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTemplateTransformationInfos($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Diadoc\Api\Proto\Docflow\TemplateTransformationInfo::class);
        $this->TemplateTransformationInfos = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.TemplateRefusalInfo TemplateRefusalInfo = 4;</code>
     * @return \Diadoc\Api\Proto\Docflow\TemplateRefusalInfo|null
     */
    public function getTemplateRefusalInfo()
    {
        return $this->TemplateRefusalInfo;
    }

    public function hasTemplateRefusalInfo()
    {
        return isset($this->TemplateRefusalInfo);
    }

    public function clearTemplateRefusalInfo()
    {
        unset($this->TemplateRefusalInfo);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Docflow.TemplateRefusalInfo TemplateRefusalInfo = 4;</code>
     * @param \Diadoc\Api\Proto\Docflow\TemplateRefusalInfo $var
     * @return $this
     */
    public function setTemplateRefusalInfo($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Docflow\TemplateRefusalInfo::class);
        $this->TemplateRefusalInfo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool IsReusable = 5;</code>
     * @return bool
     */
    public function getIsReusable()
    {
        return isset($this->IsReusable) ? $this->IsReusable : false;
    }

    public function hasIsReusable()
    {
        return isset($this->IsReusable);
    }

    public function clearIsReusable()
    {
        unset($this->IsReusable);
    }

    /**
     * Generated from protobuf field <code>optional bool IsReusable = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsReusable($var)
    {
        GPBUtil::checkBool($var);
        $this->IsReusable = $var;

        return $this;
    }

}

