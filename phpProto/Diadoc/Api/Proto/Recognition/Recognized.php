<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Recognition/Recognition.proto

namespace Diadoc\Api\Proto\Recognition;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Recognition.Recognized</code>
 */
class Recognized extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string RecognitionId = 1;</code>
     */
    protected $RecognitionId = '';
    /**
     * Generated from protobuf field <code>optional string ErrorMessage = 2;</code>
     */
    protected $ErrorMessage = null;
    /**
     * Generated from protobuf field <code>optional string FileName = 3;</code>
     */
    protected $FileName = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4;</code>
     */
    protected $DocumentType = null;
    /**
     * Generated from protobuf field <code>optional bytes Content = 5;</code>
     */
    protected $Content = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;</code>
     */
    protected $Invoice = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $RecognitionId
     *     @type string $ErrorMessage
     *     @type string $FileName
     *     @type int $DocumentType
     *     @type string $Content
     *     @type \Diadoc\Api\Proto\Recognition\RecognizedInvoice $Invoice
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Recognition\Recognition::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string RecognitionId = 1;</code>
     * @return string
     */
    public function getRecognitionId()
    {
        return $this->RecognitionId;
    }

    /**
     * Generated from protobuf field <code>string RecognitionId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRecognitionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->RecognitionId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string ErrorMessage = 2;</code>
     * @return string
     */
    public function getErrorMessage()
    {
        return isset($this->ErrorMessage) ? $this->ErrorMessage : '';
    }

    public function hasErrorMessage()
    {
        return isset($this->ErrorMessage);
    }

    public function clearErrorMessage()
    {
        unset($this->ErrorMessage);
    }

    /**
     * Generated from protobuf field <code>optional string ErrorMessage = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->ErrorMessage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string FileName = 3;</code>
     * @return string
     */
    public function getFileName()
    {
        return isset($this->FileName) ? $this->FileName : '';
    }

    public function hasFileName()
    {
        return isset($this->FileName);
    }

    public function clearFileName()
    {
        unset($this->FileName);
    }

    /**
     * Generated from protobuf field <code>optional string FileName = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->FileName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4;</code>
     * @return int
     */
    public function getDocumentType()
    {
        return isset($this->DocumentType) ? $this->DocumentType : 0;
    }

    public function hasDocumentType()
    {
        return isset($this->DocumentType);
    }

    public function clearDocumentType()
    {
        unset($this->DocumentType);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setDocumentType($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\Recognition\RecognizedDocumentType::class);
        $this->DocumentType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes Content = 5;</code>
     * @return string
     */
    public function getContent()
    {
        return isset($this->Content) ? $this->Content : '';
    }

    public function hasContent()
    {
        return isset($this->Content);
    }

    public function clearContent()
    {
        unset($this->Content);
    }

    /**
     * Generated from protobuf field <code>optional bytes Content = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->Content = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;</code>
     * @return \Diadoc\Api\Proto\Recognition\RecognizedInvoice|null
     */
    public function getInvoice()
    {
        return $this->Invoice;
    }

    public function hasInvoice()
    {
        return isset($this->Invoice);
    }

    public function clearInvoice()
    {
        unset($this->Invoice);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;</code>
     * @param \Diadoc\Api\Proto\Recognition\RecognizedInvoice $var
     * @return $this
     */
    public function setInvoice($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Recognition\RecognizedInvoice::class);
        $this->Invoice = $var;

        return $this;
    }

}

