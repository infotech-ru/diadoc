syntax = "proto3";
import "DocumentType.proto";
import "DocumentDirection.proto";
import "Invoicing/UniversalTransferDocumentInfo.proto";

package Diadoc.Api.Proto.Docflow;

message DocumentInfo {
    optional DocumentType DocumentType = 1;
    optional DocumentDirection DocumentDirection = 2;
    optional bool IsTest = 3;
    optional string CustomDocumentId = 4;
    optional string FromDepartmentId = 5;
    optional string ToDepartmentId = 6;
    optional string CounteragentBoxId = 7;
    optional DocumentDateAndNumber DocumentDateAndNumber = 8;
    optional BasicDocumentInfo BasicDocumentInfo = 9;
    optional InvoiceDocumentInfo InvoiceInfo = 10;
    optional InvoiceCorrectionDocumentInfo InvoiceCorrectionInfo = 11;
    optional PriceListDocumentInfo PriceListInfo = 12;
    optional ContractDocumentInfo ContractInfo = 13;
    optional SupplementaryAgreementDocumentInfo SupplementaryAgreementInfo = 14;
    optional UniversalTransferDocumentInfo UniversalTransferDocumentInfo = 15;
    optional UniversalCorrectionDocumentInfo UniversalCorrectionDocumentInfo = 16;
    optional string AttachmentVersion = 17;
    string Version = 18;
}

message DocumentDateAndNumber {
    optional string DocumentDate = 1;
    optional string DocumentNumber = 2;
}

message BasicDocumentInfo {
    optional string Total = 1;
    optional bool NoVat = 2;
    optional string Vat = 3;
    optional string Grounds = 4;
    optional DocumentDateAndNumber RevisionDateAndNumber = 5;
}

message InvoiceDocumentInfo {
    optional string Total = 1;
    optional string Vat = 2;
    optional int32 CurrencyCode = 3;
    optional DocumentDateAndNumber OriginalInvoiceDateAndNumber = 4;
}

message InvoiceCorrectionDocumentInfo {
    optional string TotalInc = 1;
    optional string TotalDec = 2;
    optional string VatInc = 3;
    optional string VatDec = 4;
    optional int32 CurrencyCode = 5;
    optional DocumentDateAndNumber OriginalInvoiceDateAndNumber = 6;
    optional DocumentDateAndNumber OriginalInvoiceRevisionDateAndNumber = 7;
    optional DocumentDateAndNumber OriginalInvoiceCorrectionDateAndNumber = 8;
}

message PriceListDocumentInfo {
    optional string PriceListEffectiveDate = 1;
    optional DocumentDateAndNumber ContractDocumentDateAndNumber = 2;
}

message ContractDocumentInfo {
    optional string ContractPrice = 1;
    optional string ContractType = 2;
}

message SupplementaryAgreementDocumentInfo {
    optional string ContractType = 1;
    DocumentDateAndNumber ContractDocumentDateAndNumber = 2;
    DocumentDateAndNumber DocumentDateAndNumber = 3;
    optional string Total = 4;
}

message UniversalTransferDocumentInfo {
    optional string Total = 1;
    optional string Vat = 2;
    optional int32 CurrencyCode = 3;
    optional string Grounds = 4;
    Invoicing.FunctionType Function = 5;
    optional DocumentDateAndNumber OriginalDocumentDateAndNumber = 6;
}

message UniversalCorrectionDocumentInfo {
    optional string TotalInc = 1;
    optional string TotalDec = 2;
    optional string VatInc = 3;
    optional string VatDec = 4;
    optional int32 CurrencyCode = 5;
    optional string Grounds = 6;
    Invoicing.FunctionType Function = 7;
    optional DocumentDateAndNumber OriginalDocumentDateAndNumber = 8;
    optional DocumentDateAndNumber OriginalDocumentRevisionDateAndNumber = 9;
    optional DocumentDateAndNumber OriginalDocumentCorrectionDateAndNumber = 10;
}
